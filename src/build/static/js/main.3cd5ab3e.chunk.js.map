{"version":3,"sources":["friends/store/types.js","friends/store/reducers.js","friends/store/index.js","friends/store/actions.js","friends/components/add_friend.jsx","friends/components/friend_list.jsx","friends/components/search_bar.jsx","friends/components/sort_by_favourite.jsx","friends/components/error_message.jsx","friends/components/pagination.jsx","friends/components/friend_list_container.jsx","index.js"],"names":["SET_FRIEND_NAME","ADD_FRIEND_TO_LIST","SET_SEARCH_TERM","DELETE_FRIEND","ADD_TO_FAVOURITE","REMOVE_FROM_FAVOURITE","SORT_BY_FAVOURITE","SET_ERROR_MSG","HANDLE_PAGINATION_CLICK","initialState","friendName","friendList","searchTerm","favFriends","errorMessage","currentPage","friendsPerPage","composeEnhancers","compose","createStore","state","action","type","Types","payload","Number","applyMiddleware","thunk","setErrorMessage","mapDispatchToProps","setFriendName","data","addFriendToList","friendToAdd","dispatch","getState","indexOf","push","name","is_favourite","id","length","connect","props","className","onSubmit","e","preventDefault","submitHandler","value","onChange","target","placeholder","FriendList","renderFriendList","deleteFriend","addToFavourite","removeFromFavourite","indexOfLastFriend","indexOfFirstFriend","friendArr","slice","map","friend","index","href","onClick","this","Component","friendToDelete","splice","friendToFavourite","favouriteFriends","setSearchTerm","searchFriend","_","filter","li","a","i","document","getElementById","toUpperCase","getElementsByTagName","textContent","innerText","style","display","class","sortByFavourite","sortedArr","sort","x","y","Pagination","handlePaginationClick","pageNumbers","Math","ceil","renderPageNumbers","number","event","page","FriendListContainer","container","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.3cd5ab3e.chunk.js","sourcesContent":["export const SET_FRIEND_NAME = \"SET_FRIEND_NAME\";\nexport const ADD_FRIEND_TO_LIST = \"ADD_FRIEND_TO_LIST\";\nexport const SET_SEARCH_TERM = \"SET_SEARCH_TERM\";\nexport const DELETE_FRIEND = \"DELETE_FRIEND\";\nexport const ADD_TO_FAVOURITE = \"ADD_TO_FAVOURITE\";\nexport const REMOVE_FROM_FAVOURITE = \"REMOVE_FROM_FAVOURITE\";\nexport const SORT_BY_FAVOURITE = \"SORT_BY_FAVOURITE\";\nexport const SET_ERROR_MSG = \"SET_ERROR_MSG\";\nexport const HANDLE_PAGINATION_CLICK = \"HANDLE_PAGINATION_CLICK\";\n","import * as Types from \"./types\";\n\nconst initialState = {\n  friendName: \"\",\n  friendList: [],\n  searchTerm: \"\",\n  favFriends: [],\n  errorMessage: \"\",\n  currentPage: 1,\n  friendsPerPage: 4\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case Types.SET_FRIEND_NAME:\n      return {\n        ...state,\n        friendName: action.payload\n      };\n    case Types.SET_ERROR_MSG:\n      return {\n        ...state,\n        errorMessage: action.payload\n      };\n    case Types.HANDLE_PAGINATION_CLICK:\n      return {\n        ...state,\n        currentPage: Number(action.payload)\n      };\n    case Types.ADD_FRIEND_TO_LIST:\n      return {\n        ...state,\n        friendList: [...action.payload],\n        errorMessage: \"\"\n      };\n    case Types.SET_SEARCH_TERM:\n      return {\n        ...state,\n        searchTerm: action.payload,\n        errorMessage: \"\"\n      };\n    case Types.DELETE_FRIEND:\n      return {\n        ...state,\n        friendList: [...action.payload]\n      };\n    case Types.ADD_TO_FAVOURITE:\n      return {\n        ...state,\n        friendList: [...action.payload]\n      };\n    case Types.REMOVE_FROM_FAVOURITE:\n      return {\n        ...state,\n        friendList: [...action.payload]\n      };\n    case Types.SORT_BY_FAVOURITE:\n      return {\n        ...state,\n        friendList: [...action.payload]\n      };\n    default:\n      return state;\n  }\n}\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport FriendListApp from \"./reducers\";\n\nlet composeEnhancers = compose;\nif (process.env.NODE_ENV === \"development\") {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n}\n\nexport default createStore(\n  FriendListApp,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import * as Types from \"./types\";\n\nexport function setFriendName(data) {\n  return { type: Types.SET_FRIEND_NAME, payload: data };\n}\nexport function setErrorMessage(errorMessage) {\n  return { type: Types.SET_ERROR_MSG, payload: errorMessage };\n}\nexport function handlePaginationClick(page) {\n  return { type: Types.HANDLE_PAGINATION_CLICK, payload: page };\n}\nexport function addFriendToList(friendToAdd) {\n  return (dispatch, getState) => {\n    let friendList = getState().friendList;\n\n    if (friendList.indexOf(friendToAdd) === -1) {\n      friendList.push({\n        name: friendToAdd,\n        is_favourite: false,\n        id: friendList.length\n      });\n    }\n    dispatch({\n      type: Types.ADD_FRIEND_TO_LIST,\n      payload: friendList\n    });\n  };\n}\nexport function setSearchTerm(data) {\n  return { type: Types.SET_SEARCH_TERM, payload: data };\n}\nexport function sortByFavourite(data) {\n  return (dispatch, getState) => {\n    let friendList = getState().friendList;\n    const sortedArr = friendList.sort((x, y) => {\n      return y.is_favourite - x.is_favourite;\n    });\n    dispatch({\n      type: Types.SORT_BY_FAVOURITE,\n      payload: sortedArr\n    });\n  };\n}\nexport function deleteFriend(friendToDelete) {\n  return (dispatch, getState) => {\n    let friendList = getState().friendList;\n    const index = friendList.indexOf(friendToDelete);\n    if (index > -1) {\n      friendList.splice(index, 1);\n    }\n    dispatch({\n      type: Types.DELETE_FRIEND,\n      payload: friendList\n    });\n  };\n}\n\nexport function addToFavourite(friendToFavourite) {\n  return (dispatch, getState) => {\n    const friendList = getState().friendList;\n    let favouriteFriends = friendList;\n    const index = favouriteFriends.indexOf(friendToFavourite);\n    if (index > -1) {\n      if (friendToFavourite === friendList[index])\n        friendToFavourite.is_favourite = true;\n    }\n    dispatch({\n      type: Types.ADD_TO_FAVOURITE,\n      payload: favouriteFriends\n    });\n  };\n}\n\nexport function removeFromFavourite(friend) {\n  return (dispatch, getState) => {\n    const favouriteFriends = getState().friendList;\n    const index = favouriteFriends.indexOf(friend);\n    if (index > -1) {\n      if (friend === favouriteFriends[index]) friend.is_favourite = false;\n    }\n    dispatch({\n      type: Types.REMOVE_FROM_FAVOURITE,\n      payload: favouriteFriends\n    });\n  };\n}\nexport function searchFriend(data) {\n  return (_, getState) => {\n    var input, filter, ul, li, a, i, txtValue;\n    input = document.getElementById(\"searchTerm\");\n    filter = input.value.toUpperCase();\n    ul = document.getElementById(\"friend-list\");\n    li = ul.getElementsByTagName(\"li\");\n    for (i = 0; i < li.length; i++) {\n      a = li[i].getElementsByTagName(\"a\")[0];\n\n      txtValue = a.textContent || a.innerText;\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        li[i].style.display = \"\";\n      } else {\n        li[i].style.display = \"none\";\n      }\n    }\n  };\n}\n","import { connect } from \"react-redux\";\nimport {\n  setFriendName,\n  addFriendToList,\n  setErrorMessage\n} from \"../store/actions\";\n\nconst AddFriend = props => {\n  const {\n    friendName,\n    setFriendName,\n    addFriendToList,\n    setErrorMessage,\n    friendList\n  } = props;\n  const submitHandler = e => {\n    e.preventDefault();\n    if (friendName === \"\") {\n      setErrorMessage(\"Please enter friend name\");\n    } else {\n      addFriendToList(friendName);\n    }\n  };\n  return (\n    <div className=\"add-friend-container\">\n      <form onSubmit={e => submitHandler(e)}>\n        <input\n          id=\"friendName\"\n          name=\"friendName\"\n          value={friendName}\n          onChange={e => setFriendName(e.target.value)}\n          placeholder=\"Enter your friend's name\"\n        />\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  friendName: state.friendName,\n  friendList: state.friendList\n});\nconst mapDispatchToProps = {\n  setFriendName,\n  addFriendToList,\n  setErrorMessage\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddFriend);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  deleteFriend,\n  addToFavourite,\n  removeFromFavourite\n} from \"../store/actions\";\n\nclass FriendList extends Component {\n  renderFriendList = () => {\n    const {\n      friendList,\n      deleteFriend,\n      addToFavourite,\n      removeFromFavourite,\n      favFriends,\n      currentPage,\n      friendsPerPage\n    } = this.props;\n\n    const indexOfLastFriend = currentPage * friendsPerPage;\n    const indexOfFirstFriend = indexOfLastFriend - friendsPerPage;\n    const currentFriends = friendList.slice(\n      indexOfFirstFriend,\n      indexOfLastFriend\n    );\n    const friendArr = currentFriends.map((friend, index) => {\n      return (\n        <li id=\"friend\" className=\"friend\" key={index}>\n          <a href=\"#\" className=\"friend-name\">\n            {friend.name}\n          </a>\n          <span\n            className=\"material-icons outlined delete\"\n            onClick={() => deleteFriend(friend)}\n          >\n            delete_outline\n          </span>\n          {!friend.is_favourite && (\n            <span\n              className=\"material-icons fav\"\n              onClick={() => addToFavourite(friend)}\n            >\n              star_border\n            </span>\n          )}\n          {friend.is_favourite && (\n            <span\n              className=\"material-icons fav\"\n              onClick={() => removeFromFavourite(friend)}\n            >\n              star\n            </span>\n          )}\n          <div className=\"sub-text\">is your friend</div>\n        </li>\n      );\n    });\n    return (\n      <ul id=\"friend-list\" className=\"friend-list\">\n        {friendArr}\n      </ul>\n    );\n  };\n  render() {\n    return <div>{this.renderFriendList()}</div>;\n  }\n}\nconst mapStateToProps = state => ({\n  friendList: state.friendList,\n  favFriends: state.favFriends,\n  currentPage: state.currentPage,\n  friendsPerPage: state.friendsPerPage\n});\nconst mapDispatchToProps = {\n  deleteFriend,\n  addToFavourite,\n  removeFromFavourite\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FriendList);\n","import { connect } from \"react-redux\";\nimport { searchFriend, setSearchTerm, setErrorMessage } from \"../store/actions\";\n\nconst SearchBar = props => {\n  const {\n    searchTerm,\n    setSearchTerm,\n    searchFriend,\n    friendName,\n    setErrorMessage\n  } = props;\n  const handleSearch = () => {\n    if (searchTerm === \"\") {\n      setErrorMessage(\"Please enter search value\");\n    } else {\n      searchFriend(searchTerm);\n    }\n  };\n  return (\n    <div className=\"search-friend-container\">\n      <input\n        id=\"searchTerm\"\n        name=\"searchTerm\"\n        value={searchTerm}\n        onChange={e => setSearchTerm(e.target.value)}\n        placeholder=\"search\"\n        className=\"search-box\"\n      />\n      <span class=\"material-icons search\" onClick={handleSearch}>\n        search\n      </span>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  searchTerm: state.searchTerm\n});\nconst mapDispatchToProps = {\n  setSearchTerm,\n  setErrorMessage,\n  searchFriend\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBar);\n","import { connect } from \"react-redux\";\nimport { sortByFavourite } from \"../store/actions\";\nconst SortByFavourite = props => {\n  const { sortByFavourite } = props;\n  return (\n    <div className=\"sort-by-fav\" onClick={sortByFavourite}>\n      <span class=\"material-icons outlined sort\">sort</span>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  sortByFavourite\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SortByFavourite);\n","import { connect } from \"react-redux\";\nconst ErrorMessage = props => {\n  const { errorMessage } = props;\n  return <div className=\"error-msg-container\">{errorMessage}</div>;\n};\nconst mapStateToProps = state => ({\n  errorMessage: state.errorMessage\n});\n\nexport default connect(mapStateToProps)(ErrorMessage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handlePaginationClick } from \"../store/actions\";\n\nclass Pagination extends Component {\n  render() {\n    const { friendList, friendsPerPage, handlePaginationClick } = this.props;\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(friendList.length / friendsPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <li\n          className=\"page\"\n          key={number}\n          id={number}\n          onClick={event => handlePaginationClick(event.target.id)}\n        >\n          {number}\n        </li>\n      );\n    });\n    return (\n      <div id=\"page-numbers\" className=\"page-numbers\">\n        {renderPageNumbers}\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  handlePaginationClick\n};\n\nconst mapStateToProps = state => ({\n  friendList: state.friendList,\n  currentPage: state.currentPage,\n  friendsPerPage: state.friendsPerPage\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Pagination);\n","import React, { Component } from \"react\";\nimport AddFriend from \"./add_friend\";\nimport FriendList from \"./friend_list\";\nimport SearchBar from \"./search_bar\";\nimport SortByFavourite from \"./sort_by_favourite\";\nimport ErrorMessage from \"./error_message\";\nimport Pagination from \"./pagination\";\n\nconst FriendListContainer = () => {\n  return (\n    <div className=\"friends-list-container\">\n      <div className=\"title\">Friends List</div>\n      <AddFriend />\n      <SearchBar />\n      <ErrorMessage />\n      <SortByFavourite />\n      <FriendList />\n      <Pagination />\n    </div>\n  );\n};\nexport default FriendListContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./friends/store\";\nimport FriendListContainer from \"./friends/components/friend_list_container\";\nimport \"./stylesheet/friend_list.css\";\n\nconst container = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <FriendListContainer />\n  </Provider>,\n  container\n);\n"],"sourceRoot":""}